# python script to plot global mean
# temperature as a function of time
# for three different expts
# and control


# import packages
import numpy as np                                         
from scipy import interpolate                              
import matplotlib.pyplot as plt                            
from mpl_toolkits.basemap import Basemap, shiftgrid, addcyclic
import netCDF4 as nc

#set up directories and file names
datadir='/home/wx019276/cmss/co2expt/data/'
#expt_seq='sat_seq_gm.nc'
#expt_strong='sat_ramped_gm.nc'
#expt_main='sat_strong_gm.nc'
expt_eur_seq='sat_seq_eur_av.nc'
expt_eur_strong='sat_ramped_eur_av.nc'
expt_eur_main='sat_strong_eur_av.nc'
#ctrl='ctrl_gm.nc'
ctrl_eur='sat_ctrl_eur_av.nc'

# read in control
#d=nc.Dataset(datadir+ctrl)
#airtemp=d.variables['temp_1']
#temp_ctrl=airtemp[:,0]-273.15

d=nc.Dataset(datadir+ctrl_eur)
airtemp=d.variables['temp_1']
eur_ctrl=airtemp[:,0,0,0]-273.15
#print eur_ctrl.shape

#d=nc.Dataset(datadir+expt_seq)
#airtemp=d.variables['temp_1']
#temp_seq=airtemp[:,0,0,0]-273.15

d=nc.Dataset(datadir+expt_eur_seq)
airtemp=d.variables['temp_1']
eur_seq=airtemp[:,0,0,0]-273.15

#d=nc.Dataset(datadir+expt_main)
#airtemp=d.variables['temp_1']
#temp_main=airtemp[:,0,0,0]-273.15

d=nc.Dataset(datadir+expt_eur_main)
airtemp=d.variables['temp_1']
eur_main=airtemp[:,0,0,0]-273.15


#d=nc.Dataset(datadir+expt_strong)
#airtemp=d.variables['temp_1']
#temp_strong=airtemp[:,0,0,0]-273.15

d=nc.Dataset(datadir+expt_eur_strong)
airtemp=d.variables['temp_1']
eur_strong=airtemp[:,0,0,0]-273.15

# moc data

moc_ctrl=np.array([11191200.,  11502331.,  11300727.,  12365426.,  12530136.,  13601381.,
12169146.,  11777081.,  10348426.,  11159781.,  10658586.,  11662399.,
11565693.,  11636077.,  11348556.,  11457561.,  12019964.,  12615126.,
12742876.,  10996454.,  11249882.,  11718009.,  10988153.,  10662505.,
11881294.,  12286586.,  12593362.,  11961104.,  12329797.,  11703274.,
11096702.,  10902667.,  11018479.,  11967400.,  12552221.,  11683593.,
11679455.,  10627798.,  11879512.,  11498097.,  10310515.,  11225691.,
9889251.,   9767497.,  11172704.,  12064041.,  10861095.,  11309424.,
11541416.,  12515114.,  10841954.,  12285180.,  11429873.,  11694500.,
12059816.,  12849665.,  12161099.,  11931401.,  11402712.,  10387623.,
9827465.,  10496985.,  10208959.,   9396524.,   9666651.,   9362997.,
9281710.,  10252546.,   9811489.,  10160355.,  11205831.,  11047577.,
10802262.,  10181023.,  11161501.,  10836957.,  11744113.,  11002602.,
10501847.,  11046471.,  10073054.,   9721811.,  10188111.,  10862505.,
10245226.,   9735171.,  10869651.,  10961859.,  11214813.,  11328745.,
9593869.,   9989846.,  10769439.,  11324712.,  10639669.,  11317041.,
11240366.,   9370744.,  10430163.,  10215750.,   9704760.,  10665225.,
10479725.,  11478148.,  10375585.,  12262096.,  12016006.,  11506485.,
11456018.,  11996706.,  12844582.,  12597272.,  13676658.,  12383257.,
12490856.,  12706069.,  12141346.,  12262134.,  11659177.,  12572318.,
11955667.,  11562280.,  12598244.,  13543913.,  12093003.,  10526063.,
10326417.,  10252557.,  10469652.,  10298993.,  10945669.,  10898866.,
10952433.,  10414185.,  10806486.,  11617760.,  10677459.,  10571448.,
11696009.,  10572138.,  10568562.,  11514709.,  11337766.,  11218933.,
10023418.,  10227963.,  10637361.,   8779731.,  10228927.,   9421777.,
10477261.,  10638314.,  10304589.,   9904071.,  10513313.,  10455294.,
10303426.,  10285817.,  11746979.,  11489975.,  11640857.,  11477859.,
12096815.,  12399800.,   9632809.,  12133423.,  11636039.,  10343613.,
11339381.,  11868212.,  11778680.,  11760241.,  11296866.,  10311887.,
11594411.,  11787133.,  10961636.,  11660463.,  11042029.,  11393363.,
11138550.,  11597791.,  11191498.,  12362485.,  11224097.,  10629200.,
11646601.,  12859548.,  11693512.,  12068945.,  11756193.,  12200925.,
11977992.,  11424689.,  11139556.,  10620263.,  10671033.,  11055782.,
11831499.,  11395202.])

moc_single=np.array([11073205.,  12584542.,  11593862.,  12452483.,  13084928.,  11498586., 
11203944.,  11659183.,  11908706.,  11125996.,  11547640.,  10296263., 
12114273.,  11369256.,  10674887.,  11348190.,  11161653.,  10942554., 
12103567.,  11631853.,  10827862.,  11707209.,  11614307.,  11152171., 
10799789.,  11254374.,  11192132.,  11691421.,  11836968.,  12293815., 
13631876.,  13045307.,  13310117.,  12417459.,  11497402.,  10921732., 
11862408.,  11670861.,  11937059.,  10983370.,  11977366.,  12401693., 
12340577.,  11817520.,  11431774.,  11732369.,  12429862.,  11833382., 
12476486.,  12335627.,  13037857.,  12493739.,  12403173.,  11891500., 
13039064.,  11933967.,  11693803.,  11232108.,  11057712.,  11257738., 
11917793.,  12729978.,  12527310.,  13003760.,  12840967.,  12155007., 
12732249.,  11656755.,  11850057.,  10591272.,  11406832.,  11364240., 
12007343.,  12427711.,  11992109.,  12438683.,  12677167.,  12410697., 
13179235.,  12756829.,  12308335.,  10892585.,  11952751.,  11310982., 
12466624.,  11442014.,  12599711.,  11017630.,  10870335.,  11652372., 
10927982.,  11892582.,  11868610.,  11596182.,  11519273.,  12259604., 
10481913.,  10239272.,  10793533.,   9592200.,  10734723.,  10012046., 
10681821.,   9470574.,  11273617.,  11763825.,  10590027.,  11123781., 
11921601.,  11638781.,  10106162.,  10376085.,  10052856.,  10465639., 
10667975.,  11138667.,  12667698.,  11556888.,  10743355.,  11417441., 
11678256.,  12302035.,  11249258.,  12515309.,  10846135.,  11711101., 
11716802.,  10787074.,  10234341.,  10846096.,  10731012.,  10627020., 
11327302.,  11548150.,  12075514.,  11229466.,  11967501.,  10867746., 
10425827.,  11426985.,  11922297.,  10445126.,   9627166.,  11354706., 
 9595971.,   9385661.,  10254085.,   9935158.,   9834911.,   9988435., 
 9780157.,  11336768.,   9852762.,  10620102.,  10213646.,  10762555., 
10152206.,  11876643.,  10929004.,  10765720.,   9733023.,  10446848., 
11274271.,  11164545.,  11057448.,  10540647.,   9764764.,  12301702., 
11215053.,  11157849.,  10636238.,  11010031.,  10561590.,  10345545., 
11335168.,  11218908.,   9593945.,   8915314.,  10513292.,  10151897., 
10399038.,  10732287.,  11199024.,  11108719.,   9522387.,  11194650., 
10925160.,  10229804.,  10566411.,  10512492.,   9984388.,   9409156., 
 9222805.,  10565889.,  10415349.,  10472130.,   9344320.,  10373021., 
11789041.,  11076324.])

moc_double=np.array([11076027.,   10908865.,   12714552.,   12219878.,   12335127.,   13128804.,
12204329.,   11505971.,   12407988.,   11717339.,   11347243.,   10638198.,
11474735.,   10258917.,   10913314.,   11059385.,   12040644.,   11861165.,
11465198.,   12158683.,   11419077.,   11741792.,   12091136.,   11581923.,
11991808.,   11646290.,   10640890.,   11140080.,   11099033.,   11870497.,
11576725.,   11974430.,   11591595.,   12001626.,   11408114.,   10595563.,
12095531.,    9971297.,   10707129.,    9738355.,    9473341.,    9240976.,
10413791.,   10244302.,   11569621.,   11214059.,   10768616.,   10668552.,
10946222.,   11141478.,    9136382.,   11025865.,   12369808.,   10916892.,
11407334.,   10636372.,   10105443.,   10394595.,   10112622.,   10829977.,
10075802.,    9906425.,    9403673.,    9744913.,    9467226.,    9444063.,
9639912.,    9179315.,    9390161.,   10904761.,    9941844.,   10488290.,
9425711.,    9324947.,    9300990.,    9795308.,   10021138.,    9006999.,
8599631.,   10273372.,    8223756.5,   9469421.,   11011120.,    9973923.,
10087880.,   10124303.,    9645185.,    9465492.,    9945553.,   10841282.,
9656818.,    8585422.,    8775102.,    8057911.5,   8766519.,    8927050.,
8955243.,    9819447.,    9882330.,    9680092.,    9366741.,   10500689.,
9202568.,    8794558.,    9626331.,    8736990.,    7746652.5,   8051227.5,
8275730.5,   7878180.,    8871684.,    7876818.,    8888160.,    7433387.,
9075732.,    9903839.,   10545610.,    9363856.,   10205320.,   10539595.,
10034462.,   10429063.,    9054039.,   10018084.,    9405888.,    9322055.,
9702454.,    9973963.,    8974242.,   10195291.,    9299578.,    9386235.,
10322108.,    9448947.,    8545644.,    9096095.,    8833799.,   10370463.,
10380744.,   10634131.,   11406862.,    9697458.,    9987149.,    9485987.,
10397369.,    9471740.,    8909244.,    9115593.,    9974079.,    9797784.,
9977882.,    9483217.,    8304178.5,   8940272.,    9460860.,    9258666.,
8806278.,    8285390.,    9318864.,    8946381.,    8558084.,    9176629.,
10272991.,    9483312.,    8387399.5,   9114225.,    9543929.,    8959646.,
8422436.,    8031448.,    9098284.,    7866504.5,   8323218.,    7932423.5,
7235744.5,   7798889.,    8043238.5,   9217476.,    8442982.,    7687062.5,
7651644.5,   7380689.5,   7281609.5,   7874543.,    8738479.,    6977020.5,
6620605.5,   7415909.,    7111352.,    6808977.5,   7762502.,    7558003.,
8548431.,    7157113.,    7276193.5,   6895404.5,   6695321.5,   7311048.5,
7099509.5,   7446534.5,])

moc_seq=np.array([11823146.,  10833237.,  10217509.,  10399405.,  11325410.,   9867139.,
9501484.,   9544076.,   9635727.,   9892425.,   9482717.,  10852230.,
10525126.,  10695510.,  11758632.,  11260791.,  12749954.,  11167824.,
11211027.,  12645543.,  11058901.,  11518071.,  12271905.,  11746535.,
10873190.,  10921427.,  11473781.,  11014468.,  11695444.,  11557015.,
10493129.,  11871461.,  11048689.,  11156838.,   9610182.,  11039332.,
11269898.,  10523859.,  10616365.,   9602405.,   9720581.,  10686875.,
10432500.,   8975428.,  10289616.,  10060894.,  11120936.,  10890085.,
10479054.,  10820285.,   9382551.,   8540934.,  10145763.,  12471643.,
10731093.,  11353925.,  10201997.,  11083655.,  10659357.,  11728944.,
11015795.,   9778847.,  12452446.,  12390640.,  11470961.,  11719764.,
12620371.,  12223709.,  12881547.,  12643129.,  12895848.,  11691928.,
10676070.,  10631356.,  11188479.,  11363826.,  12309077.,  11594937.,
11246763.,  11338924.,  10501895.,  11338099.,  10949076.,  11442608.,
11656721.,  12689542.,  11618779.,  11407253.,  10719480.,  12982863.,
12390941.,  13183355.,  12060994.,  11789186.,  12770038.,  12648506.,
12479035.,  11620557.,  11500411.,  12850465.,  12835667.,  12966616.,
12791120.,  13049637.,  12158049.,  14607577.,  14933666.,  14062743.,
11907855.,  13642815.,  13657621.,  13550214.,  11520194.,  11678964.,
12871409.,  13275870.,  12545857.,  12987913.,  11967539.,  13164100.,
13342457.,  15015930.,  12967868.,  14051864.,  14288911.,  13012610.,
12883619.,  15269154.,  14290053.,  14837108.,  13140231.,  13410766.,
13859827.,  12423784.,  13229242.,  12309842.,  12649367.,  15549937.,
14745264.,  14153786.,  16389117.,  16616677.,  13309345.,  12683065.,
13101348.,  14537180.,  13299712.,  14667662.,  14092005.,  13614610.,
13974519.,  15660990.,  14003048.,  13860612.,  14936367.,  16122674.,
17214450.,  15786800.,  14729204.,  13820796.,  14562620.,  14008526.,
14482302.,  14505611.,  13965193.,  13735367.,  15545806.,  14331540.,
14496797.,  13780969.,  14170230.,  14048533.,  13178687.,  12085470.,
13158327.,  12810594.,  13387409.,  12814616.,  14661318.,  15577778.,
14507489.,  13420426.,  14708707.,  15594230.,  14307363.,  13656209.,
13885842.,  13959039.,  14926171.,  14497534.,  13460909.,  13505894.,
14096581.,  15383425.,  17074206.,  16591907.,  15090787.,  14775352.,
16848756.,  16990406.,  16843156.,  17047780.,  16962526.,  17216472.,
16953390.,  15960192.,  16403704.,  17055180.,  15282181.,  15105718.,
16459734.,  18293314.,  17239632.,  15899122.,  16426095.,  15568628.,
15578766.,  16985590.,  16504930.,  13992352.,  13476635.,  14823675.,
15662675.,  16367016.,  16224456.,  14848567.,  15558486.,  15276528.,
17401910.,  15648747.,  15929868.,  16224723.,  15903710.,  16282190.,
15954673.,  16134605.,  16076772.,  16854022.,  17312340.,  16133214.,
16562609.,  17845616.,  17981796.,  17706762.,  15566963.,  16908730.,
16485971.,  18820626.,  18935236.,  17350578.])

moc_ctrl = moc_ctrl*1.0e-6
moc_single = moc_single*1.e-6
moc_double = moc_double*1.e-6
moc_seq = moc_seq*1.e-6

#lon=d.variables['longitude']
#lat=d.variables['latitude']

fig = plt.figure(figsize=(11, 8))
ax1 = fig.add_subplot(111)

ax1.axis([4,18, 5, 20])
ax1.tick_params(direction='out', which='both')
ax1.set_xlabel('European average temperature')
ax1.set_ylabel('MOC (SVs)')
ax1.set_xticks(np.arange(4, 18, 1))
ax1.set_yticks(np.arange(5, 20, 1))

#xpts = np.arange(0+1850,200+1850,1)
#xpts_ext=np.arange(200+1850,450+1850,1)
#xpts_ctrl=np.arange(0+1850,450+1850,1)

#ax1.plot(xpts_ext, temp_seq, color="red", label='Sequestration')
#ax1.plot(xpts, temp_main, color="blue", label='Single rate inc.')
#ax1.plot(xpts, temp_strong, color="green", label='Double rate inc.')

ax1.plot(eur_seq,moc_seq, 'ro', label='Sequestration Europe')
ax1.plot(eur_main,moc_single, 'bo', label='Single rate inc. Europe')
ax1.plot(eur_strong,moc_double, 'go', label='Double rate inc. Europe')

#ax1.plot(xpts_ctrl, temp_ctrl[0:450], color="black", label='Control')
ax1.plot(moc_ctrl, eur_ctrl, 'ko', label='Control Europe')
plt.title('European temperature and MOC')


#, label='Sine', color="blue")
#ax1.plot(xpts, np.cos(np.radians(xpts)), label='Cosine', color="red")

ax1.legend(loc='upper left')

plt.savefig('glob_mean_raw_temps_and_europe.png')
plt.show()

#### TEMP ANOMS #####


